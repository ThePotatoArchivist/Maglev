# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

      - name: Github Publish
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'build/libs/*.jar'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Modrinth Publish
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CHANGELOG: ${{ github.event.release.body }}
        if: ${{ github.event_name == 'release' && github.event.action == 'published' && env.MODRINTH_TOKEN != '' }}
        run: |
          ./gradlew --no-configuration-cache modrinth
          ./gradlew --no-configuration-cache modrinthSyncBody
